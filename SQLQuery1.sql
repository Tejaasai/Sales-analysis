use MAIN_STUDY;

select count(*) from [dbo].[CustData];
select count(*) from [dbo].['Transaction Data$'];

select * from [dbo].[CustData];
select * from [dbo].['Transaction Data$'];

/*Join both tables considering Transaction
table as base table (Hint: left Join – Key variable is MCN/CustomerID)
and name the table as Final_Data*/

SELECT * INTO #FINAL_DATA
FROM [dbo].['Transaction Data$'] A
LEFT JOIN [dbo].[CustData] B
ON A.MCN=B.CUSTID


--. Calculate the discount variable using formula (Discount = TotalAmount-SaleAmount)
SELECT *,(TOTALAMOUNT-SALEAMOUNT) AS DISCOUNT FROM #FINAL_DATA;

---Filter the Final_Data using sample_flag=1

SELECT * INTO SAMPLE_DATA FROM #FINAL_DATA
WHERE SAMPLE_FLAG=1;

SELECT  * FROM SAMPLE_DATA;



--Q1. Count the number of observations having any of the variables is having null value/missing values?

---CUSTDATA---
SELECT * FROM #FINAL_DATA;

SELECT SUM(CASE WHEN CUSTID IS NULL THEN 1 ELSE 0 END) CUSTID_NULL_VALUES FROM #FINAL_DATA
WHERE CUSTID IS NULL;

--HERE IN THE ABOVE QUERY THEY ARE 3 NULL VALUES--



SELECT SUM(CASE WHEN GENDER IS NULL THEN 1 ELSE 0 END) GENDER_NULL_VALUES FROM #FINAL_DATA
WHERE GENDER IS NULL;

--HERE IN THE ABOVE QUERY THEY ARE 3 NULL VALUES--


SELECT SUM(CASE WHEN [LOCATION] IS NULL THEN 1 ELSE 0 END) LOCATION_NULL_VALUES FROM #FINAL_DATA
WHERE [LOCATION] IS NULL;

--HERE IN THE ABOVE QUERY THEY ARE 3 NULL VALUES--


SELECT SUM(CASE WHEN AGE IS NULL THEN 1 ELSE 0 END) AGE_NULL_VALUES FROM #FINAL_DATA
WHERE AGE IS NULL;

--HERE IN THE ABOVE QUERY THEY ARE 3 NULL VALUES--


SELECT SUM(CASE WHEN CUST_SEG IS NULL THEN 1 ELSE 0 END) CUST_SEG_NULL_VALUES FROM #FINAL_DATA
WHERE CUST_SEG IS NULL;

--HERE IN THE ABOVE QUERY THEY ARE 3 NULL VALUES--


SELECT SUM(CASE WHEN SAMPLE_FLAG IS NULL THEN 1 ELSE 0 END) SAMPLE_FLAG_NULL_VALUES FROM #FINAL_DATA
WHERE SAMPLE_FLAG IS NULL;

--HERE IN THE ABOVE QUERY THEY ARE 3 NULL VALUES--



---TRANSACTION DATA--

SELECT SUM(CASE WHEN ITEMCOUNT IS NULL THEN 1 ELSE 0 END) ITEM_COUNT_NULL_VALUES FROM #FINAL_DATA
WHERE ITEMCOUNT IS NULL;

--HERE AFTER EXECUTING ABOVE QUERY WE GOT 2 NULL VALUES --



SELECT SUM(CASE WHEN [TransactionDate] IS NULL THEN 1 ELSE 0 END) TRANSACTIONDATE_NULL_VALUES FROM #FINAL_DATA
WHERE [TransactionDate] IS NULL;

--NO NULL VALUES--


SELECT SUM(CASE WHEN TOTALAMOUNT IS NULL THEN 1 ELSE 0 END) TOTALAMOUNT_NULL_VALUES FROM #FINAL_DATA
WHERE TOTALAMOUNT IS NULL;

--NO NULL VALUES--


SELECT  SUM(CASE WHEN [SaleAmount] IS NULL THEN 1 ELSE 0 END) SALEAMOUNT_NULL_VALUES FROM #FINAL_DATA
WHERE [SaleAmount] IS NULL;

--NO NULL VALUES--


SELECT SUM(CASE WHEN [SalePercent] IS NULL THEN 1 ELSE 0 END) SALESPERCENT_NULL_VALUES FROM #FINAL_DATA
WHERE [SalePercent] IS NULL;

----HERE AFTER EXECUTING ABOVE QUERY WE GOT 3 NULL VALUES--


SELECT SUM(CASE WHEN [Cash_Memo_No] IS NULL THEN 1 ELSE 0 END) CASHMEMO_NO_NULL_VALUES FROM #FINAL_DATA
WHERE [Cash_Memo_No] IS NULL;

DELETE FROM [dbo].['Transaction Data$']
WHERE [Cash_Memo_No] IS NULL;

--NO NULL VALUES--


SELECT SUM(CASE WHEN [Dep1Amount] IS NULL THEN 1 ELSE 0 END) DEPT1_AMOUNT_NULL_VALUES FROM #FINAL_DATA
WHERE [Dep1Amount] IS NULL;

--HERE AFTER EXECUTING ABOVE QUERY WE GOT 1 NULL VALUES --



SELECT SUM(CASE WHEN [Dep2Amount] IS NULL THEN 1 ELSE 0 END) DEPT2_AMOUNT_NULL_VALUES FROM #FINAL_DATA
WHERE [Dep2Amount] IS NULL;

--NO NULL VALUES--



SELECT SUM(CASE WHEN [Dep3Amount] IS NULL THEN 1 ELSE 0 END) DEPT3_AMOUNT_NULL_VALUES FROM #FINAL_DATA
WHERE [Dep3Amount] IS NULL;

--HERE AFTER EXECUTING ABOVE QUERY WE GOT 1 NULL VALUES --





SELECT SUM(CASE WHEN [Dep4Amount] IS NULL THEN 1 ELSE 0 END) DEPT4_AMOUNT_NULL_VALUES FROM #FINAL_DATA
WHERE [Dep4Amount] IS NULL;

--NO NULL VALUES--


SELECT SUM(CASE WHEN [Store ID] IS NULL THEN 1 ELSE 0 END) STORE_ID_NULL_VALUES FROM #FINAL_DATA
WHERE [Store ID] IS NULL;

DELETE FROM [dbo].['Transaction Data$']
WHERE [Store ID] IS NULL;

--NO NULL VALUES--


SELECT SUM(CASE WHEN [MCN] IS NULL THEN 1 ELSE 0 END) MCN_NULL_VALUES FROM #FINAL_DATA
WHERE [MCN] IS NULL;

--HERE AFTER EXECUTING ABOVE QUERY WE GOT 3 NULL VALUES SO DROPING THOSE RECORDS--
DELETE FROM [dbo].['Transaction Data$']
WHERE MCN IS NULL

--3 ROWS ARE EFFECTED AS THEY ARE REMOVED---


---THEY ARE TOTAL 25 NULL VALUES BEFORE DROPING RECORDS FROM MCN COLUMN ---
---AFTER DROPING RECORDS FROM MCN COLUMN WE HAVE 14 NULL VALUES--








---Q2. How many customers have shopped? (Hint: Distinct Customers)


---REMOVED THE SINGLE QUOTE PRESENT IN MCN COLUMN---

/*UPDATE #FINAL_DATA
SET MCN=SUBSTRING(MCN,2,LEN(MCN)-1); */


---CHANGING THE DATA TYPE OF MCN COLUMN TO FLOAT FROM VARCHAR BECAUSE IT IS NOT STRING---
ALTER TABLE #FINAL_DATA
ALTER COLUMN [MCN] FLOAT;
----

SELECT COUNT(DISTINCT(MCN)) DISTINCT_CUSTOMERS FROM #FINAL_DATA;



---Q3.  How many shoppers (customers) visiting more than 1 store?

SELECT COUNT(*) AS CUSTOMER_SHOPPED_MORE_THAN_1_STORE FROM 
(
SELECT DISTINCT(MCN) FROM #FINAL_DATA
GROUP BY MCN,[Store ID]
HAVING COUNT([STORE ID])>1 
)S1;




---Q4.   What is the distribution of shoppers by day of the week? How the customer shopping behavior on each day of week? (Hint: You are required to calculate number of customers, number of transactions, total sale amount, total quantity etc.. by each week day)

--REMOVE THE SINGLE QUOTE FROM CASH MEMO NO---

/*UPDATE #FINAL_DATA
SET [Cash_Memo_No]=SUBSTRING([Cash_Memo_No],2,LEN([Cash_Memo_No])-1); */
-----


SELECT
DATEPART(WEEKDAY,TRANSACTIONDATE)WEEK_DAY,
COUNT(MCN) NUMBER_OF_CUSTOMERS,
COUNT([Cash_Memo_No]) COUNT_OF_TRANSACTIONS,
SUM([SaleAmount])TOTAL_SALES_AMOUNT,
SUM(ITEMCOUNT) TOTAL_NUMBER_OF_ITEMS
FROM #FINAL_DATA
GROUP BY DATEPART(WEEKDAY,TRANSACTIONDATE)
ORDER BY DATEPART(WEEKDAY,TRANSACTIONDATE);




---Q5.  What is the average revenue per customer/average revenue per customer by each location?


SELECT MCN,AVG(SALEAMOUNT) AVG_REVENUE_PER_CUST,LOCATION
FROM #FINAL_DATA
WHERE LOCATION IS NOT NULL -- and MCN = 700000079587111
GROUP BY MCN,LOCATION
----
/*SELECT MCN,SUM(SALEAMOUNT)/(SELECT SUM(SALEAMOUNT) FROM #FINAL_DATA) SALES,LOCATION
FROM #FINAL_DATA
WHERE LOCATION IS NOT NULL -- AND MCN = 700000079587111
GROUP BY MCN,LOCATION*/


---Q6.  Average revenue per customer by each store etc?


SELECT MCN,AVG(SALEAMOUNT) AVG_REVENUE_PER_CUST,[Store ID]
FROM #FINAL_DATA
GROUP BY MCN,[Store ID];


---Q7. Find the department spend by store wise?


SELECT SUM([Dep1Amount]) DEPART_1,SUM([Dep2Amount]) DEPART_2,SUM([Dep3Amount])DEPART_3,SUM([Dep4Amount])DEPART_4,[STORE ID] FROM
#FINAL_DATA
GROUP BY [STORE ID];


---Q8. What is the Latest transaction date and Oldest Transaction date? (Finding the minimum and maximum transaction dates)


SELECT MIN([TransactionDate]) OLD_TRANSACTION_DATE,MAX([TransactionDate]) NEW_TRANSACTION_DATE FROM #FINAL_DATA;



---Q9. How many months of data provided for the analysis?

SELECT DATEPART(YEAR,TRANSACTIONDATE) YEAR,
	   DATENAME(MONTH,TRANSACTIONDATE) MONTH FROM #FINAL_DATA
GROUP BY DATEPART(YEAR,TRANSACTIONDATE),DATENAME(MONTH,TRANSACTIONDATE)
ORDER BY YEAR;

--TOTAL 12 MONTHS---
--IN 2018 THEY ARE 2 MONTHS AND 2017 THEY ARE 10 MONTHS DATA--


---Q10. Find the top 3 locations interms of spend and total contribution of sales out of total sales?


SELECT TOP 3 SUM(SALEAMOUNT) TOTAL_SALES,LOCATION
FROM #FINAL_DATA
GROUP BY LOCATION
ORDER BY TOTAL_SALES DESC;



---Q11. Find the customer count and Total Sales by Gender?


SELECT GENDER,COUNT(MCN) NUMBER_OF_CUSTOMERS,SUM(SALEAMOUNT) TOTAL_SALES
FROM #FINAL_DATA
WHERE GENDER IS NOT NULL
GROUP BY GENDER;


---CUSTOMERS WHO SPENT MORE IS FEMALE THAN MALE---



---Q12. What is total  discount and percentage of discount given by each location?


WITH T_T AS
(
SELECT A.LOCATION,SUM(A.DISCOUNT) TOTAL_DISCOUNT FROM
(
SELECT LOCATION,(TOTALAMOUNT-SALEAMOUNT) AS DISCOUNT FROM #FINAL_DATA
WHERE LOCATION IS NOT NULL
)A
GROUP BY A.LOCATION
)
SELECT LOCATION,TOTAL_DISCOUNT,(TOTAL_DISCOUNT*100/(SELECT SUM(TOTAL_DISCOUNT) FROM T_T)) PERCENT_DISCOUNT FROM T_T
ORDER BY TOTAL_DISCOUNT DESC;



---Q13. Which segment of customers contributing maximum sales?


WITH TABLE_1 AS
(
SELECT *,
(CASE	WHEN AGE>50 THEN 'OLD'
		WHEN AGE>30 THEN 'ADULT'
		ELSE 'YOUTH'
		END) AGE_SEG
FROM #FINAL_DATA
)

SELECT AGE_SEG,SUM(SALEAMOUNT) TOTAL_SALES FROM TABLE_1
GROUP BY AGE_SEG
ORDER BY TOTAL_SALES DESC;


---MAXIMUM SALES ARE CONTRIBUTED BY CUSTOMERS WHOSE AGE IS GREATER THAN 50--


---Q14. What is the average transaction value by location, gender, segment?



WITH TABLE_1 AS
(
SELECT *,
(CASE	WHEN AGE>50 THEN 'OLD'
		WHEN AGE>30 THEN 'ADULT'
		ELSE 'YOUTH'
		END) AGE_SEG
FROM #FINAL_DATA
)
SELECT AVG([TotalAmount]) AVG_TRANSACTION,LOCATION,GENDER,AGE_SEG FROM
TABLE_1
WHERE LOCATION IS NOT NULL
GROUP BY LOCATION,GENDER,AGE_SEG
ORDER BY AVG([TotalAmount]) DESC;



---Q15. Create Customer_360 Table with below columns.


CREATE TABLE CUSTOMER_360
(
Customer_id  INT,
Gender CHAR(1),
Location VARCHAR(3),
Age INT,
Cust_seg INT,
No_of_transactions INT,
No_of_items  INT,
Total_sale_amount FLOAT,
Average_transaction_value FLOAT,
TotalSpend_Dep1 FLOAT,
TotalSpend_Dep2 FLOAT,
TotalSpend_Dep3 FLOAT,
TotalSpend_Dep4 FLOAT,
No_Transactions_Dep1 INT,
No_Transactions_Dep2 INT,
No_Transactions_Dep3 INT,
No_Transactions_Dep4 INT,
No_Transactions_Weekdays INT,
No_Transactions_Weekends INT,
Rank_based_on_Spend INT,
Decile int
);

SELECT * FROM CUSTOMER_360;












